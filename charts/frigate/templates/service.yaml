apiVersion: v1
kind: Service
metadata:
  name: {{ template "frigate.fullname" . }}-main
  labels:
{{ include "frigate.labels" . | indent 4 }}
{{- if .Values.service.main.labels }}
{{ toYaml .Values.service.main.labels | indent 4 }}
{{- end }}
{{- with .Values.service.main.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
{{- if (or (eq .Values.service.main.type "ClusterIP") (empty .Values.service.main.type)) }}
  type: ClusterIP
  {{- if .Values.service.main.clusterIP }}
  clusterIP: {{ .Values.service.main.clusterIP }}
  {{end}}
{{- else if eq .Values.service.main.type "LoadBalancer" }}
  type: {{ .Values.service.main.type }}
  {{- if .Values.service.main.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.main.loadBalancerIP }}
  {{- end }}
  {{- if .Values.service.main.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
{{ toYaml .Values.service.main.loadBalancerSourceRanges | indent 4 }}
  {{- end -}}
{{- else }}
  type: {{ .Values.service.main.type }}
{{- end }}
{{- if .Values.service.main.externalIPs }}
  externalIPs:
{{ toYaml .Values.service.main.externalIPs | indent 4 }}
{{- end }}
  {{- if .Values.service.main.externalTrafficPolicy }}
  externalTrafficPolicy: {{ .Values.service.main.externalTrafficPolicy }}
  {{- end }}
  ports:
    - name: http
      port: {{ .Values.service.main.ports.http.port }}
      protocol: TCP
      targetPort: http
{{- if (and (eq .Values.service.main.type "NodePort") (not (empty .Values.service.main.ports.http.nodePort))) }}
      nodePort: {{.Values.service.main.ports.http.nodePort}}
{{- end }}
    - name: rtmp
      port: {{ .Values.service.main.ports.rtmp.port }}
      protocol: TCP
      targetPort: rtmp
{{- if (and (eq .Values.service.main.type "NodePort") (not (empty .Values.service.main.ports.rtmp.nodePort))) }}
      nodePort: {{.Values.service.main.ports.rtmp.nodePort}}
{{- end }}
  selector:
    app.kubernetes.io/name: {{ include "frigate.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
